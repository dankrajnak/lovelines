generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map("account")
}

model Person {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  emailVerified DateTime? @map("email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @map("updated_at")
  ageDate       DateTime? @map("age_date")
  // TODO remove this if a date dimension is deemed necessary.
  ageYearMonth  Int?      @map("age_year_month")
  storyId       Int?      @map("story_id")
  story         Story?    @relation(fields: [storyId], references: [id])

  @@index([storyId], name: "idx_person_story_id")
  @@map("person")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map("session")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_request")
}

model Period {
  id           Int     @id @default(autoincrement())
  intensity    Int
  lineId       Int     @map("line_id")
  isHeartBreak Boolean @map("is_heart_break")
  yearMonth    Int     @map("year_month")
  year         Int
  month        Int
  line         Line    @relation(fields: [lineId], references: [id])

  @@index([isHeartBreak], name: "idx_period_is_heart_break")
  @@index([lineId], name: "idx_period_line")
  @@index([yearMonth], name: "idx_period_year_month")
  @@map("period")
}

model Line {
  id          Int       @id @default(autoincrement())
  storyId     Int       @map("story_id")
  createdDate DateTime  @default(now()) @map("created_date")
  deletedDate DateTime? @map("deleted_date")
  story       Story     @relation(fields: [storyId], references: [id])
  periods     Period[]

  @@index([deletedDate], name: "idx_line_deleted_date")
  @@index([storyId], name: "idx_line_story_id")
  @@map("line")
}

model Story {
  id           Int       @id @default(autoincrement())
  createdDate  DateTime  @default(now()) @map("created_date")
  modifiedDate DateTime  @default(now()) @map("modified_date")
  deletedDate  DateTime? @map("deleted_date")
  lines        Line[]

  Person Person[]
  @@index([deletedDate], name: "idx_story_deleted_date")
  @@map("story")
}
